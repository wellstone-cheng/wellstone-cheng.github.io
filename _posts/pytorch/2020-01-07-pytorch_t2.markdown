---
layout: post
title: pytorch 知识点
date: 2020-01-07 00:05:00
author: wellstone-cheng
img: pytorch.jpeg
pytorch: true
tags: [pytorch]
---

## 1 simple API
### 1.1 torch.randn vs torch.rand
#### 1.1.1 torch.rand 均匀分布
``` python 
dummy_input =torch.rand(2, 3)# 2维数据
dummy_input =torch.rand(2,3,4)# 3维数据,每一维数据中有4个数据,每个二维数据中有3个一维数据,每个三维数据中有2个二维数据
dummy_input = torch.rand(13, 1, 28, 28)# 4维数据,每个一维数据中有28个数据,每个二维数据中有28个一维数据,每个三维数据中有1个二维数据,(即没有二维数据的表示,全表示为三维数据)每个四维数据中有13个三维数据
```
#### 1.1.2 torch.randn 均匀分布

## 2 神经网络模块(Neural Network)--torch.nn
#### 2.1 卷积
##### 2.1.1 torch.nn.Conv1d 
一维的卷积能处理多维数据
##### 2.1.2 torch.nn.Conv2d 
二维卷积可以处理二维数据
``` python
self.conv1 = nn.Conv2d(1, 10, kernel_size=5)#in_channels, out_channels, kernel_size, stride
#batch, channel , height , width,在卷积中其实为二维数据
dummy_input = torch.rand(13, 1, 28, 28)
```
根据公式
``` shell
d = (d - kennel_size + 2 * padding) / stride + 1
```
d(height)=(height-kernnel_size+2 *padding) /Stride +1
         =(28-5+2*0)/2 +1
         =12

d(weight)=(weight-kernnel_size+2 *padding) /Stride +1
         =(28-5+2*0)/2 +1
         =12
故卷积输出为: batch,out_channel,height,width
(13,10,12,12)

## 3 torch.nn.functional
### 3.1 与torch.nn的区别
* torch.nn
在__init__()函数里定义，定义的是一个类
* torch.nn.functional
在__forward()__函数里定义，定义的是一个函数
https://blog.csdn.net/zbzcDZF/article/details/90447993