I""<h1 id="1python-安装与卸载">1.Python 安装与卸载</h1>

<h2 id="11-先卸载已安装的python版本">1.1 先卸载已安装的Python版本</h2>
<ul>
  <li>卸载python版本
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get remove python 
</code></pre></div>    </div>
  </li>
  <li>卸载Python以及他的依赖包
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get remove --auto-remove python*
</code></pre></div>    </div>
  </li>
  <li>清除python配置文件和数据文件
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get purge python
sudo apt-get purge --auto-remove python
</code></pre></div>    </div>
    <h2 id="12-安装最新的python版本方法1">1.2 安装最新的Python版本（方法1）</h2>
  </li>
  <li>安装依赖环境
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python-openssl
</code></pre></div>    </div>
  </li>
  <li>下载Python3.7安装包
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget https://www.python.org/ftp/python/3.7.5/Python-3.7.5.tgz
tar -zxvf Python-3.7.5.tgz
</code></pre></div>    </div>
    <p>注：使用wget命令比网页下载快很多。</p>
  </li>
  <li>进入解压后目录执行./configure
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./configure --prefix=/usr/local/python3   #/usr/local/python3为安装目录
make
make install
</code></pre></div>    </div>
  </li>
  <li>建立python3的软链
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ln -s /usr/local/python3/bin/python3 /usr/bin/python3
</code></pre></div>    </div>
  </li>
  <li>将/usr/local/python3/bin加入PATH,在/etc/profile文件末尾加入
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>export PATH=$PATH:/usr/local/python3/bin
</code></pre></div>    </div>
  </li>
  <li>生效在配置信息中环境变量
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>source /etc/profile
</code></pre></div>    </div>
  </li>
  <li>测试是否安装成功
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># python3 -V</span>
Python 3.7.5
<span class="c"># pip3 -V</span>
pip 19.2.3 from /usr/local/python3/lib/python3.7/site-packages/pip <span class="o">(</span>python 3.7<span class="o">)</span>
</code></pre></div>    </div>
    <h2 id="13-apt-get-install-直接安装python方法2">1.3 apt-get install 直接安装python（方法2）</h2>
  </li>
  <li>安装</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt install python3-dev python3-pip
</code></pre></div></div>
<ul>
  <li>测试是否安装成功
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code># python3 -V                         
Python 3.6.8
# pip3 -V
pip 9.0.1 from /usr/lib/python3/dist-packages (python 3.6)
</code></pre></div>    </div>
  </li>
  <li>升级pip</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#pip3 install --upgrade pip
Collecting pip
  Downloading https://files.pythonhosted.org/packages/00/b6/9cfa56b4081ad13874b0c6f96af8ce16cfbc1cb06bedf8e9164ce5551ec1/pip-19.3.1-py2.py3-none-any.whl (1.4MB)
    100% |################################| 1.4MB 73kB/s 
# pip3 -V
Traceback (most recent call last):
  File "/usr/bin/pip3", line 9, in &lt;module&gt;
    from pip import main
ImportError: cannot import name 'main'
# pip -V
pip 19.3.1 from /usr/local/lib/python3.6/dist-packages/pip (python 3.6)
</code></pre></div></div>
<h1 id="2python-ide选择">2.Python IDE选择</h1>

<h2 id="21-pycharm">2.1 PyCharm</h2>

<h3 id="211-安装与运行">2.1.1 安装与运行</h3>
<p>从网页上下载pycharm-community-2019.2.4.tar.gz解压后</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd pycharm-community-2019.2.4/bin
sh pycharm.sh &amp;
</code></pre></div></div>

<h3 id="212-配置ls">2.1.2 配置ls</h3>

<p>进入File -&gt; Settings -&gt; project:Project Interpreter</p>

<ul>
  <li>project Interpreter</li>
</ul>

<p>项目解释器，指向Python的执行文件</p>

<ul>
  <li>package</li>
</ul>

<p>可以一次选中所有package进行安装？？？
还是需要什么package就一个一个添加？</p>

<h3 id="213-运行状况">2.1.3 运行状况</h3>

<ul>
  <li>不需进行任何配置就能运行动态图</li>
</ul>

<h2 id="22-jupyter-notebook">2.2 Jupyter Notebook</h2>

<h3 id="221-可以使用anaconda自带的jupyter">2.2.1 可以使用anaconda自带的jupyter</h3>
<h3 id="222-配置">2.2.2 配置</h3>

<ul>
  <li>指定jupyter解释器</li>
</ul>

<p>找到Jupyter Notebook内核指定的Python环境位置, 打开kernel.json文件, 编辑路径即可</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{
 "argv": [
  "/root/anaconda3/bin/python",
  "-m",
  "ipykernel_launcher",
  "-f",
  "{connection_file}"
 ],
 "display_name": "Python 3",
 "language": "python"

</code></pre></div></div>

<h3 id="223-运行状况">2.2.3 运行状况</h3>

<ul>
  <li>暂时还没解决不能显示动态图的问题</li>
</ul>

<h1 id="3python包与环境管理">3.Python包与环境管理</h1>

<h2 id="31-pip">3.1 pip</h2>

<p>pip 是 Python 包管理工具，该工具提供了对Python 包的查找、下载、安装、卸载的功能；
Python 2.7.9 + 或 Python 3.4+ 以上版本都自带 pip 工具。</p>

<ul>
  <li>
    <p>pip install</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```
sudo pip install packagename
``` 代表进行全局安装，安装后全局可用。如果是信任的安装包可用使用该命令进行安装
  
```
pip install --user packagename
```    代表仅该用户的安装，安装后仅该用户可用。处于安全考虑，尽量使用该命令进行安装。
</code></pre></div>    </div>
  </li>
  <li>
    <p>pip 安装包清单</p>
  </li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  pip list
  Package     Version  
  ----------- ---------
  numpy                1.17.3   
  Pillow               6.2.1    
  pip                  19.3.1   
  setuptools           41.2.0   
  six                  1.12.0   
  tensorboard          2.0.1    
  tensorflow           2.0.0    
  tensorflow-estimator 2.0.1  
  torch                1.3.0+cpu
  torchvision          0.4.1+cpu
  virtualenv           16.7.7   

</code></pre></div></div>
<ul>
  <li>pip安装包路径，在Python的安装路径下
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code># cd python3/lib/python3.7/site-packages
# ls
# 
 tensorboard
 tensorboard-2.0.1.dist-info
 tensorflow
 tensorflow-2.0.0.dist-info
 tensorflow_core
 tensorflow_estimator
 tensorflow_estimator-2.0.1.dist-info
 torch
 torchvision
</code></pre></div>    </div>
  </li>
</ul>

<h2 id="32-conda">3.2 conda</h2>
<p>一个开源的软件包管理系统和环境管理系统，用于安装多个版本的软件包及其依赖关系，并在它们之间轻松切换</p>

<h2 id="33-anaconda">3.3 anaconda</h2>

<p>用于科学计算的python发行版，里面预装好了conda，某个版本的python，众多packages,科学计算工具等。Anaconda利用工具/命令conda来进行package和environment的管理，并且已经包含了python和相关配套工具</p>

<h3 id="331-从国内镜像中安装anaconda">3.3.1 从国内镜像中安装anaconda</h3>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget -c https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2019.10-Linux-x86_64.sh
sh Anaconda3-2019.10-Linux-x86_64.sh
</code></pre></div></div>
<p>注：anaconda中已包含python和conda,
conda下载的包默认链接至自带的Python中，可以通过</p>

<ul>
  <li>conda安装包清单
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#conda list
</code></pre></div>    </div>
  </li>
  <li>conda安装包路径，在anaconda的安装路径下
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>anaconda3/lib/python3.7/site-packages
</code></pre></div>    </div>
  </li>
</ul>
:ET